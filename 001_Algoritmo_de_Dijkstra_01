import sys

# Función para encontrar el índice del nodo con la distancia mínima
def encontrar_minimo(distancias, visitado):
    minimo = sys.maxsize
    minimo_indice = -1

    for i in range(len(distancias)):
        if distancias[i] < minimo and not visitado[i]:
            minimo = distancias[i]
            minimo_indice = i

    return minimo_indice


# Función para imprimir el camino más corto desde el nodo de origen
def imprimir_camino(distancias, padre, nodo_destino):
    camino = []
    nodo_actual = nodo_destino

    while nodo_actual != -1:
        camino.append(nodo_actual)
        nodo_actual = padre[nodo_actual]

    print("Camino más corto:", end=" ")
    for i in range(len(camino) - 1, -1, -1):
        print(camino[i], end=" ")

    print()


# Función principal del algoritmo de Dijkstra
def dijkstra(grafo, nodo_origen):
    cantidad_nodos = len(grafo)
    distancias = [sys.maxsize] * cantidad_nodos
    padre = [-1] * cantidad_nodos
    visitado = [False] * cantidad_nodos

    distancias[nodo_origen] = 0

    for _ in range(cantidad_nodos):
        nodo_actual = encontrar_minimo(distancias, visitado)
        visitado[nodo_actual] = True

        for nodo in range(cantidad_nodos):
            if (
                grafo[nodo_actual][nodo] > 0
                and not visitado[nodo]
                and distancias[nodo] > distancias[nodo_actual] + grafo[nodo_actual][nodo]
            ):
                distancias[nodo] = distancias[nodo_actual] + grafo[nodo_actual][nodo]
                padre[nodo] = nodo_actual

    return distancias, padre


# Ejemplo de uso del algoritmo de Dijkstra
grafo = [
    [0, 4, 0, 0, 0, 0, 0, 8, 0],
    [4, 0, 8, 0, 0, 0, 0, 11, 0],
    [0, 8, 0, 7, 0, 4, 0, 0, 2],
    [0, 0, 7, 0, 9, 14, 0, 0, 0],
    [0, 0, 0, 9, 0, 10, 0, 0, 0],
    [0, 0, 4, 14, 10, 0, 2, 0, 0],
    [0, 0, 0, 0, 0, 2, 0, 1, 6],
    [8, 11, 0, 0, 0, 0, 1, 0, 7],
    [0, 0, 2, 0, 0, 0, 6, 7, 0],
]

nodo_origen = 0
distancias, padre = dijkstra(grafo, nodo_origen)

for i in range(len(distancias)):
    if i != nodo_origen:
        print(f"Distancia más corta desde el nodo {nodo_origen} al nodo {i}: {distancias[i]}")
        imprimir_camino(distancias, padre, i)
